{"ast":null,"code":"import _classCallCheck from\"/Users/macbook/Desktop/react-project/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/macbook/Desktop/react-project/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/Users/macbook/Desktop/react-project/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/Users/macbook/Desktop/react-project/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/macbook/Desktop/react-project/node_modules/@babel/runtime/helpers/esm/createSuper.js\";//* ============================ CLASS COMPONENTS AND STATE ============================\n//* React'da Class-Component'ler ES6 class yapisina dayanmaktadir.\n//* Cok fazla boilerplate kod icermektedir.\n//* Ancak Class-Component'ler React'da state'leri barindiran ilk component yapisidir.\n//* State, aslinda bir component hakkinda bilgi tutan bir React nesnesidir.\n//* Bir componentin state'i zaman icerisinde degisebilir.\n//* State her degistiginde React bu componenti yeninden render eder.\n//* Bir state'e baslangıc degeri constructor metodu icersinde this.state ile atanabilir\n//* constructor'in disinda state, setState() metodu ile degistilebilir.\n//* ====================================================================================\nimport React,{Component}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Counter=/*#__PURE__*/function(_Component){_inherits(Counter,_Component);var _super=_createSuper(Counter);//! rconst:\nfunction Counter(props){var _this;_classCallCheck(this,Counter);_this=_super.call(this,props);_this.handleDec=function(){_this.setState({count:_this.state.count-1});};_this.state={count:props.count||0};// handleInc metodunun counter classına baglanması\n_this.handleInc=_this.handleInc.bind(_assertThisInitialized(_this));return _this;}_createClass(Counter,[{key:\"handleInc\",value:function handleInc(){this.setState({count:this.state.count+1});}},{key:\"render\",value://! Yazmis oldugumuz metotlar default olarak classa baglanmaz.Ancak, React built-in fonksiyonlari baglidir.\n//* Bunun icin metotlarimizi ya constructor icerisinde baglamaliyiz yada otomatik baglamayi saglayan arrow fonksiyonlarini kullanmaliyiz.\nfunction render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"container text-center mt-4\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"display-4 text-danger m-4\",children:[\"COUNT: \",this.state.count,\" \"]}),/*#__PURE__*/_jsx(\"button\",{onClick:this.handleInc,className:\"btn btn-success\",children:\"INC\"}),/*#__PURE__*/_jsx(\"button\",{onClick:this.handleDec,className:\"btn btn-danger\",children:\"dec\"})]});}}]);return Counter;}(Component);export default Counter;","map":{"version":3,"names":["React","Component","Counter","props","handleDec","setState","count","state","handleInc","bind"],"sources":["/Users/macbook/Desktop/react-project/src/components/2-classcomponents/Counter.jsx"],"sourcesContent":["//* ============================ CLASS COMPONENTS AND STATE ============================\n//* React'da Class-Component'ler ES6 class yapisina dayanmaktadir.\n//* Cok fazla boilerplate kod icermektedir.\n//* Ancak Class-Component'ler React'da state'leri barindiran ilk component yapisidir.\n//* State, aslinda bir component hakkinda bilgi tutan bir React nesnesidir.\n//* Bir componentin state'i zaman icerisinde degisebilir.\n//* State her degistiginde React bu componenti yeninden render eder.\n//* Bir state'e baslangıc degeri constructor metodu icersinde this.state ile atanabilir\n//* constructor'in disinda state, setState() metodu ile degistilebilir.\n//* ====================================================================================\n\n\n\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n    //! rconst:\n    constructor(props) {\n      super(props)\n    \n      this.state = {\n         count: props.count || 0,\n      }\n    // handleInc metodunun counter classına baglanması\n      this.handleInc = this.handleInc.bind(this);\n    }\n\n\n    handleInc(){\n        this.setState({\n            count: this.state.count + 1,\n        });\n    }\n    handleDec = () => {\n        this.setState({\n            count: this.state.count - 1,\n        })\n    }\n\n    //! Yazmis oldugumuz metotlar default olarak classa baglanmaz.Ancak, React built-in fonksiyonlari baglidir.\n  //* Bunun icin metotlarimizi ya constructor icerisinde baglamaliyiz yada otomatik baglamayi saglayan arrow fonksiyonlarini kullanmaliyiz.\n\n  render() {\n    return (\n      <div className=\"container text-center mt-4\">\n        <h1 className=\"display-4 text-danger m-4\">COUNT: {this.state.count} </h1>\n        <button onClick={this.handleInc}  className=\"btn btn-success\">INC</button>\n        <button  onClick={this.handleDec} className=\"btn btn-danger\">dec</button>\n      </div>\n    );\n  }\n}\n\nexport default Counter;"],"mappings":"kmBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,MAAOA,MAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,2FAEMC,Q,kGACF;AACA,iBAAYC,KAAZ,CAAmB,yCACjB,uBAAMA,KAAN,EADiB,MAgBnBC,SAhBmB,CAgBP,UAAM,CACd,MAAKC,QAAL,CAAc,CACVC,KAAK,CAAE,MAAKC,KAAL,CAAWD,KAAX,CAAmB,CADhB,CAAd,EAGH,CApBkB,CAGjB,MAAKC,KAAL,CAAa,CACVD,KAAK,CAAEH,KAAK,CAACG,KAAN,EAAe,CADZ,CAAb,CAGF;AACE,MAAKE,SAAL,CAAiB,MAAKA,SAAL,CAAeC,IAAf,+BAAjB,CAPiB,aAQlB,C,6CAGD,oBAAW,CACP,KAAKJ,QAAL,CAAc,CACVC,KAAK,CAAE,KAAKC,KAAL,CAAWD,KAAX,CAAmB,CADhB,CAAd,EAGH,C,sBAOD;AACF;AAEA,iBAAS,CACP,mBACE,aAAK,SAAS,CAAC,4BAAf,wBACE,YAAI,SAAS,CAAC,2BAAd,qBAAkD,KAAKC,KAAL,CAAWD,KAA7D,OADF,cAEE,eAAQ,OAAO,CAAE,KAAKE,SAAtB,CAAkC,SAAS,CAAC,iBAA5C,iBAFF,cAGE,eAAS,OAAO,CAAE,KAAKJ,SAAvB,CAAkC,SAAS,CAAC,gBAA5C,iBAHF,GADF,CAOD,C,qBAnCmBH,S,EAsCtB,cAAeC,QAAf"},"metadata":{},"sourceType":"module"}