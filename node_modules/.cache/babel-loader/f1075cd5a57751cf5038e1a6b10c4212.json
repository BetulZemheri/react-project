{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";// * =======================================================\n// *                     EVENTS\n// * =======================================================\n//? ReactJS, Tarayicilar arasi uyumluluk ve performans artisi gibi\n//? sebeplerden oturu Sentetik Event olarak adilandirilan Olaylari\n//? kullanir. Sentetik Event, aslinda tarayicinin dogal event'larinin\n//? bir sarmalayici (Wrapper) arabirimle ortulmesi ile olusur. Bu sayede,\n//? React ortaminda kullanilan event'larin bilindik tarayicilarda\n//? sorunsuz calismasini saglanir.\n//? Ayrinti icin : https://reactjs.org/docs/events.html\nvar Events=function Events(){var info=\"events\";var handleClick=function handleClick(){alert(\"Btn Clicked\");};// const handleClear = (text) => {\n//     alert(text);\n// }\n// const handleChange = () =>{\n//     info = \"hooks\";\n//     console.log(info)\n// }\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"container text-center mt-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"display-4 text-danger m-4\",children:[\" \",info,\" \"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClick,className:\"btn btn-warning\",children:\"Click\"})]});};export default Events;//! info console'da guncellendigini ancak DOM'da guncellenmedigini gorduk.\n//* Bunun sebebi REACT'in aksi belirtilmedigi surece elementleri\n//* static olarak kabul etmesinden kaynaklanir.\n//* React bunu DOM islemlerini minimize etmek icin yapmaktadir.\n//* REACT'a hangi elementleri interaktif oldugu belirtilmelidir.\n//! React'a elementlerin interaktif oldugunu belirtmek icin state'ler kullanilir.\n//! State, elementlerin degisiklik durumlarini tutan nesnelerdir.\n//? ReactJs'de state'leri kullanmak icin  2 ayri Component yapisi bulunmaktadir.\n//? 1. Statefull Classes (Class Components).\n//? 2. Hooks (Functional Components).\n//?Biz su ana kadar uygulamalarimizda Fonksiyonel Component'leri kullandik.\n//? Yaygin kullanim Fonksiyonel Component'lerdir.","map":{"version":3,"names":["Events","info","handleClick","alert"],"sources":["/Users/macbook/Desktop/react-project/src/components/event-intro/Events.jsx"],"sourcesContent":["// * =======================================================\n// *                     EVENTS\n// * =======================================================\n\n//? ReactJS, Tarayicilar arasi uyumluluk ve performans artisi gibi\n//? sebeplerden oturu Sentetik Event olarak adilandirilan Olaylari\n//? kullanir. Sentetik Event, aslinda tarayicinin dogal event'larinin\n//? bir sarmalayici (Wrapper) arabirimle ortulmesi ile olusur. Bu sayede,\n//? React ortaminda kullanilan event'larin bilindik tarayicilarda\n//? sorunsuz calismasini saglanir.\n//? Ayrinti icin : https://reactjs.org/docs/events.html\n\n\n\n\nconst Events = () => {\n    let info = \"events\";\n    const handleClick = () => {\n        alert(\"Btn Clicked\");\n    };\n    // const handleClear = (text) => {\n    //     alert(text);\n    // }\n    // const handleChange = () =>{\n    //     info = \"hooks\";\n    //     console.log(info)\n    // }\n    return (\n    <div className=\"container text-center mt-4\">\n        <div className=\"display-4 text-danger m-4\"> {info} </div>\n\n        <button onClick={handleClick} className=\"btn btn-warning\">Click</button>\n        {/* <button onClick={handleClear(\"Clear Btn Pressed\")} className=\"btn btn-dark\">Clear</button>   */}\n        {/* /onclick olsada olmasada calling yapildigini sanar. arrow fonk varsa d√ºzelir. */}\n        {/* <button onClick={handleChange} className=\"btn btn-danger\">Change</button> */}\n    </div>\n    )\n}\n\nexport default Events\n\n//! info console'da guncellendigini ancak DOM'da guncellenmedigini gorduk.\n//* Bunun sebebi REACT'in aksi belirtilmedigi surece elementleri\n//* static olarak kabul etmesinden kaynaklanir.\n\n//* React bunu DOM islemlerini minimize etmek icin yapmaktadir.\n//* REACT'a hangi elementleri interaktif oldugu belirtilmelidir.\n//! React'a elementlerin interaktif oldugunu belirtmek icin state'ler kullanilir.\n//! State, elementlerin degisiklik durumlarini tutan nesnelerdir.\n//? ReactJs'de state'leri kullanmak icin  2 ayri Component yapisi bulunmaktadir.\n//? 1. Statefull Classes (Class Components).\n//? 2. Hooks (Functional Components).\n\n//?Biz su ana kadar uygulamalarimizda Fonksiyonel Component'leri kullandik.\n//? Yaygin kullanim Fonksiyonel Component'lerdir."],"mappings":"wFAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,GAAMA,OAAM,CAAG,QAATA,OAAS,EAAM,CACjB,GAAIC,KAAI,CAAG,QAAX,CACA,GAAMC,YAAW,CAAG,QAAdA,YAAc,EAAM,CACtBC,KAAK,CAAC,aAAD,CAAL,CACH,CAFD,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBACA,aAAK,SAAS,CAAC,4BAAf,wBACI,aAAK,SAAS,CAAC,2BAAf,eAA6CF,IAA7C,OADJ,cAGI,eAAQ,OAAO,CAAEC,WAAjB,CAA8B,SAAS,CAAC,iBAAxC,mBAHJ,GADA,CAUH,CAtBD,CAwBA,cAAeF,OAAf,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA"},"metadata":{},"sourceType":"module"}