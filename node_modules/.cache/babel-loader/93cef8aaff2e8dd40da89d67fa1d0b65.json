{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/react-project/src/components/useStateHook/UseStateExample.jsx\",\n    _s = $RefreshSig$();\n\n//* ========================== HOOKS ====================================\n//! Hook'lar fonksiyonel component'ler icerisinde state'leri kullanmamiza\n//! olanak saglayan ozel fonksiyonlardir.\n//! React 16.8 versiyonu ile gelmistir ve geldikten sonra Class-componentler'in\n//! kullanimi cok azaltmistir.\n//? React'ta useState(), useEffect(), useContext() gibi bir cok built-in\n//? Hook bulunmaktadir. Ayrica custom hook tanimlamak da mumkundur.\n//* Hook Kullanim Kurallari:\n//* 1. İlk olarak import edilmedlir. import { useState } from \"react\";\n//* 2. Hook'lar ust seviyede kullanilmalidir. Yani Hook'lar bir\n//*    dongunun, kosul cumleciginin ve icice fonksiyonlarin icerisinde\n//*    kullanilmamalidir.\n//* 3. Hook'lar sadece React Fonksiyonel componentleri icerisinde cagrilmalidir.\n//*    Normal Javascript fonksiyonlari icerisinde cagrilmamalidir\n//*    (Custom hook'lar icerisinde bir hook cagrilabilir)\n//?    https://reactjs.org/docs/hooks-rules.html\n//* =====================================================================\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UseStateExample = () => {\n  _s();\n\n  const [count, setCount] = useState(0); //array destructure\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-4 text-danger m-4\",\n      children: \"USESTATE COUNT:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success\",\n      children: \"INC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-dark\",\n      children: \"CLR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-warning\",\n      children: \"DEC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UseStateExample, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = UseStateExample;\nexport default UseStateExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseStateExample\");","map":{"version":3,"names":["useState","UseStateExample","count","setCount"],"sources":["/Users/macbook/Desktop/react-project/src/components/useStateHook/UseStateExample.jsx"],"sourcesContent":["//* ========================== HOOKS ====================================\n//! Hook'lar fonksiyonel component'ler icerisinde state'leri kullanmamiza\n//! olanak saglayan ozel fonksiyonlardir.\n//! React 16.8 versiyonu ile gelmistir ve geldikten sonra Class-componentler'in\n//! kullanimi cok azaltmistir.\n\n//? React'ta useState(), useEffect(), useContext() gibi bir cok built-in\n//? Hook bulunmaktadir. Ayrica custom hook tanimlamak da mumkundur.\n\n//* Hook Kullanim Kurallari:\n//* 1. İlk olarak import edilmedlir. import { useState } from \"react\";\n//* 2. Hook'lar ust seviyede kullanilmalidir. Yani Hook'lar bir\n//*    dongunun, kosul cumleciginin ve icice fonksiyonlarin icerisinde\n//*    kullanilmamalidir.\n//* 3. Hook'lar sadece React Fonksiyonel componentleri icerisinde cagrilmalidir.\n//*    Normal Javascript fonksiyonlari icerisinde cagrilmamalidir\n//*    (Custom hook'lar icerisinde bir hook cagrilabilir)\n//?    https://reactjs.org/docs/hooks-rules.html\n//* =====================================================================\n\nimport { useState } from 'react';\n\nconst UseStateExample = () => {\nconst [count, setCount] = useState(0);  //array destructure\n  return (\n    <div className=\"container text-center mt-4\">\n      <h1 className=\"display-4 text-danger m-4\">USESTATE COUNT:</h1>\n      <button className=\"btn btn-success\">INC</button>\n      <button className=\"btn btn-dark\">CLR</button>\n      <button className=\"btn btn-warning\">DEC</button>\n    </div>\n  );\n};\n\nexport default UseStateExample;"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;EAAA;;EAC9B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC,CAD8B,CACU;;EACtC,oBACE;IAAK,SAAS,EAAC,4BAAf;IAAA,wBACE;MAAI,SAAS,EAAC,2BAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,SAAS,EAAC,iBAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,SAAS,EAAC,cAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAQ,SAAS,EAAC,iBAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAVD;;GAAMC,e;;KAAAA,e;AAYN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}