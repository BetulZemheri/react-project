{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/react-project/src/components/event-intro/Events.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// * =======================================================\n// *                     EVENTS\n// * =======================================================\n//? ReactJS, Tarayicilar arasi uyumluluk ve performans artisi gibi\n//? sebeplerden oturu Sentetik Event olarak adilandirilan Olaylari\n//? kullanir. Sentetik Event, aslinda tarayicinin dogal event'larinin\n//? bir sarmalayici (Wrapper) arabirimle ortulmesi ile olusur. Bu sayede,\n//? React ortaminda kullanilan event'larin bilindik tarayicilarda\n//? sorunsuz calismasini saglanir.\n//? Ayrinti icin : https://reactjs.org/docs/events.html\nconst Events = () => {\n  let info = \"events\";\n\n  const handleClick = () => {\n    alert(\"Btn Clicked\");\n  }; // const handleClear = (text) => {\n  //     alert(text);\n  // }\n  // const handleChange = () =>{\n  //     info = \"hooks\";\n  //     console.log(info)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-4 text-danger m-4\",\n      children: [\" \", info, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      className: \"btn btn-warning\",\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Events;\nexport default Events; //! info console'da guncellendigini ancak DOM'da guncellenmedigini gorduk.\n//* Bunun sebebi REACT'in aksi belirtilmedigi surece elementleri\n//* static olarak kabul etmesinden kaynaklanir.\n//* React bunu DOM islemlerini minimize etmek icin yapmaktadir.\n//* REACT'a hangi elementleri interaktif oldugu belirtilmelidir.\n//! React'a elementlerin interaktif oldugunu belirtmek icin state'ler kullanilir.\n//! State, elementlerin degisiklik durumlarini tutan nesnelerdir.\n//? ReactJs'de state'leri kullanmak icin  2 ayri Component yapisi bulunmaktadir.\n//? 1. Statefull Classes (Class Components).\n//? 2. Hooks (Functional Components).\n//?Biz su ana kadar uygulamalarimizda Fonksiyonel Component'leri kullandik.\n//? Yaygin kullanim Fonksiyonel Component'lerdir.\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["Events","info","handleClick","alert"],"sources":["/Users/macbook/Desktop/react-project/src/components/event-intro/Events.jsx"],"sourcesContent":["// * =======================================================\n// *                     EVENTS\n// * =======================================================\n\n//? ReactJS, Tarayicilar arasi uyumluluk ve performans artisi gibi\n//? sebeplerden oturu Sentetik Event olarak adilandirilan Olaylari\n//? kullanir. Sentetik Event, aslinda tarayicinin dogal event'larinin\n//? bir sarmalayici (Wrapper) arabirimle ortulmesi ile olusur. Bu sayede,\n//? React ortaminda kullanilan event'larin bilindik tarayicilarda\n//? sorunsuz calismasini saglanir.\n//? Ayrinti icin : https://reactjs.org/docs/events.html\n\n\n\n\nconst Events = () => {\n    let info = \"events\";\n    const handleClick = () => {\n        alert(\"Btn Clicked\");\n    };\n    // const handleClear = (text) => {\n    //     alert(text);\n    // }\n    // const handleChange = () =>{\n    //     info = \"hooks\";\n    //     console.log(info)\n    // }\n    return (\n    <div className=\"container text-center mt-4\">\n        <div className=\"display-4 text-danger m-4\"> {info} </div>\n\n        <button onClick={handleClick} className=\"btn btn-warning\">Click</button>\n        {/* <button onClick={handleClear(\"Clear Btn Pressed\")} className=\"btn btn-dark\">Clear</button>   */}\n        {/* /onclick olsada olmasada calling yapildigini sanar. arrow fonk varsa d√ºzelir. */}\n        {/* <button onClick={handleChange} className=\"btn btn-danger\">Change</button> */}\n    </div>\n    )\n}\n\nexport default Events\n\n//! info console'da guncellendigini ancak DOM'da guncellenmedigini gorduk.\n//* Bunun sebebi REACT'in aksi belirtilmedigi surece elementleri\n//* static olarak kabul etmesinden kaynaklanir.\n\n//* React bunu DOM islemlerini minimize etmek icin yapmaktadir.\n//* REACT'a hangi elementleri interaktif oldugu belirtilmelidir.\n//! React'a elementlerin interaktif oldugunu belirtmek icin state'ler kullanilir.\n//! State, elementlerin degisiklik durumlarini tutan nesnelerdir.\n//? ReactJs'de state'leri kullanmak icin  2 ayri Component yapisi bulunmaktadir.\n//? 1. Statefull Classes (Class Components).\n//? 2. Hooks (Functional Components).\n\n//?Biz su ana kadar uygulamalarimizda Fonksiyonel Component'leri kullandik.\n//? Yaygin kullanim Fonksiyonel Component'lerdir."],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,MAAMA,MAAM,GAAG,MAAM;EACjB,IAAIC,IAAI,GAAG,QAAX;;EACA,MAAMC,WAAW,GAAG,MAAM;IACtBC,KAAK,CAAC,aAAD,CAAL;EACH,CAFD,CAFiB,CAKjB;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,oBACA;IAAK,SAAS,EAAC,4BAAf;IAAA,wBACI;MAAK,SAAS,EAAC,2BAAf;MAAA,gBAA6CF,IAA7C;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAGI;MAAQ,OAAO,EAAEC,WAAjB;MAA8B,SAAS,EAAC,iBAAxC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAUH,CAtBD;;KAAMF,M;AAwBN,eAAeA,MAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA"},"metadata":{},"sourceType":"module"}